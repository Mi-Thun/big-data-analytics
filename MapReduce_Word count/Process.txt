1. Open Eclipse IDE
2. Copy 'training' project and paste it on same place by name it "WordCount"
3. Expand WordCount --> src --> (default package)

4. Rename 4 of 3 java file are "WordCount.java", "MapForWordCount.java", "ReducerForWordCount.java"
Now replace the code that I provide bellow üòÅ

=====================================================================
WordCount.java
=====================================================================
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;

public class WordCount {

  public static void main(String[] args) throws Exception {

    if (args.length != 2) {
      System.out.printf("Usage: WordCount <input dir> <output dir>\n");
      System.exit(-1);
    }

    Configuration config = new Configuration();
    Path input = new Path(args[0]);
    Path output = new Path(args[1]);
 
    @SuppressWarnings("deprecation")
    Job job = new Job();
   

    job.setJarByClass(WordCount.class);
   
    job.setJarByClass(WordCount.class);
    job.setMapperClass(MapForWordCount.class);
    job.setReducerClass(ReducerForWordCount.class);
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(IntWritable.class);
    FileInputFormat.addInputPath(job, input);
    FileOutputFormat.setOutputPath(job,output);


    boolean success = job.waitForCompletion(true);
    System.exit(success ? 0 : 1);
  }
}



==============================================================================
MapForWordCount.java
==============================================================================
import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class MapForWordCount extends Mapper<LongWritable, Text, Text, IntWritable> {

  @Override
  public void map(LongWritable key, Text value, Context context)
      throws IOException, InterruptedException {
	
    String line = value.toString();
    String[] words = line.split(",");
    for (String word: words){
    	Text outputKey = new Text(word.toUpperCase().trim());
    	IntWritable outputValue = new IntWritable(1);
    	context.write(outputKey, outputValue);
    }
  }
}


=====================================================================================
ReducerForWordCount.java
=====================================================================================
import java.io.IOException;

import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class ReducerForWordCount extends Reducer<Text, IntWritable, Text, IntWritable> {

  @Override
  public void reduce(Text key, Iterable<IntWritable> values, Context context)
      throws IOException, InterruptedException {

    int sum = 0;
    for(IntWritable value: values){
    	sum += value.get();
    }
    context.write(key, new IntWritable(sum));
  }
}


==============
5. Right click on 'WordCount' project --> export --> java --> select jar --> Next --> give a jar file
   name as "WordCount" --> Next --> Next --> Finish
6. Avoid if any error message occur.

=====================================================================================
FireFox Browser
=====================================================================================

7. Go to http://quickstart.cloudera:8888/accounts/login/?next=/
8. Login by using
	User name: cloudera
	Password: cloudera

9. Go to file browser that you see upper right side of the browser üòÖ
10. Cretate new directory as wordcount ==> go that directory create new file as file1.txt
11. Go to that file1.txt ==> click on 'edit file' option and add some text as comma seperated. Than save it


=====================================================================================
CMD
=====================================================================================
12. open CMD and write bellow command
	hadoop jar WordCount.jar WordCount  /user/cloudera/wordcount/file1.txt  wordcountout

explain ==>
(i) 1st is jar file, that is in my case is "WordCount.jar" if you get any error then provide complete location of that
jar file in my case the cmd will be "jar /home/cloudera/workspace/WordCount WordCount  /user/cloudera/wordcount/ output"
''''
Open computer from desktop home screen --> filesystem --> home --> cloudera --> workspace (here you will find the created jar file).
if you move or copy the jar file in to one step back folder which is cloudera then you don't need to provide complete location.
you can also choose a location of jar file while creating a new jar file...üòÖ
''''
(ii) 2nd "WordCount" is Project name
(iii) "/user/cloudera/wordcount/file1.txt" that is input location. if you have multiple txt file then provide just folder 
name like that "/user/cloudera/wordcount/"
(iv) "wordcountout" output location or folder name

More generic way to explain: ü§£
"hadoop jar <jar file> <main class> <input path> <output path>"

üò™üò™
13. To see output go to firefox where you create a folder and add file1.txt 
Here you also see another folder name as "wordcountout" In this folder you will find the output.
Or 
oprn CMD and run that command
----------------------------------------
hdfs dfs -cat /user/cloudera/wordcountout/part-r-00000

"/user/cloudera/wordcountout/part-r-00000" location of my output.

To see all file list cmd:
	hdfs dfs -ls /user/cloudera



